#ifndef OOMPH_EXPLICIT_TNNP_VENT_HEADER
#define OOMPH_EXPLICIT_TNNP_VENT_HEADER


// Config header generated by autoconfig
#ifdef HAVE_CONFIG_H
  #include <oomph-lib-config.h>
#endif

#include "cell_model_base.h"

namespace oomph{

	class ExplicitTNNPVent : public ExplicitTimeStepCellModelBase
	{
	public:

		ExplicitTNNPVent();

		void explicit_timestep(CellState &Cellstate, Vector<double> &new_state);

		inline bool return_initial_value(const unsigned &n, double &v, const unsigned &cell_type);

		virtual double cm() const {return TTCell_CAPACITANCE;}
	protected:
		// constants for Tent ventricle model
		//	from TNNP_MarkovIKr_function.h in haibo ni folders
		double TTCell_Ko;
		double TTCell_Cao;
		double TTCell_Nao;
		double TTCell_Vc;
		double TTCell_Vsr;
		double TTCell_Vss;
		double TTCell_Bufc;
		double TTCell_Kbufc;
		double TTCell_Bufsr;
		double TTCell_Kbufsr;
		double TTCell_Bufss;
		double TTCell_Kbufss;
		double TTCell_Vmaxup;
		double TTCell_Kup;
		double TTCell_Vrel;
		double TTCell_k1_;
		double TTCell_k2_;
		double TTCell_k3;
		double TTCell_k4;
		double TTCell_EC;
		double TTCell_maxsr;
		double TTCell_minsr;
		double TTCell_Vleak;
		double TTCell_Vxfer;
		double TTCell_R;
		double TTCell_F;
		double TTCell_T;
		double TTCell_CAPACITANCE;
		double TTCell_pKNa;
		double TTCell_GbNa;
		double TTCell_KmK;
		double TTCell_KmNa;
		double TTCell_knak;
		double TTCell_GCaL;
		double TTCell_GbCa;
		double TTCell_knaca;
		double TTCell_KmNai;
		double TTCell_KmCa;
		double TTCell_ksat;
		double TTCell_n;
		double TTCell_GpCa;
		double TTCell_KpCa;
		double TTCell_GpK;

		double TTCell_RTONF;
		double TTCell_inverseVcF2;
		double TTCell_inverseVcF;
		double TTCell_inversevssF2;

	};
}

#endif