#ifndef OOMPH_EXPLICIT_TNNP_06_VENT_WITH_MC_IKR_UPDATED_HEADER
#define OOMPH_EXPLICIT_TNNP_06_VENT_WITH_MC_IKR_UPDATED_HEADER

// Config header generated by autoconfig
#ifdef HAVE_CONFIG_H
  #include <oomph-lib-config.h>
#endif

#include "cell_model_base_updated.h"

namespace oomph{

class TNNP06MCIKr : public CellModelBaseUpdated
{
public:
	TNNP06MCIKr();

	double return_initial_state_variable(const unsigned &v, const unsigned &cell_type) override;

	double return_initial_membrane_potential(const unsigned &cell_type) override;

	void Calculate_Derivatives(const double &Vm,
								const Vector<double> &CellVariables,
								const double &t,
								const unsigned &cell_type,
								const double &Istim,
								const Vector<double> &Other_Parameters,
								const Vector<double> &Other_Variables,

								Vector<double> &Variable_Derivatives,
								double &Iion) override;

	void get_optional_output(const double &Vm,
						const Vector<double> &CellVariables,
						const double &t,
						const unsigned &cell_type,
						const double &Istim,
						const Vector<double> &Other_Parameters,
						const Vector<double> &Other_Variables,

						Vector<double> &Out) const override;

	// enum Cell_Variables_Enum	: unsigned;
	// enum Other_Parameters_Enum	: unsigned;
	// enum Other_Variables_Enum	: unsigned;
	// enum Output_Data_Enum		: unsigned;

	enum Cell_Variables_Enum : unsigned
	{
	    sm_TT,
	    sh_TT,
	    sj_TT,
	    sxs_TT,
	    ss_TT,
	    sr_TT,
	    sd_TT,
	    sf_TT,
	    sf2_TT,
	    sfcass_TT,
	    mNaL_TT,
	    hNaL_TT,
	    f_sd_TT,
	    f_sf_TT,
	    f_sf2_TT,
	    f_sfcass_TT,
	    Ki_TT,
	    Nai_TT,
	    Cai_TT,
	    CaSS_TT,
	    CaSR_TT,
	    sRR_TT,
	    // XR1_TT,
	    // XR2_TT,
	    wt_O_TT,
	    wt_C1_TT,
	    wt_C2_TT,
	    wt_I_TT,
	    wt_C3_TT
	};
	enum Other_Parameters_Enum : unsigned
	{

	};
	enum Other_Variables_Enum : unsigned
	{

	};
	enum Output_Data_Enum : unsigned
	{

	};

protected:
	
	
			
	//External concentrations
    double Ko;
    double Cao;
    double Nao;
    double pKNa;

    double R;
    double T;
    double F;
    double RTONF;
    double NFORT;

    double CAPACITANCE;

    double Mgi;
    double TAU_hNaL;


    double KpCa;
    double GbNa;
    double GbCa;
    double maxsr;
    double minsr;
    double EC;
    double k1_;
    double k2_;
    double k4;
    double k3;
    double Vrel;
    double Vmaxup;
    double Kup;
    double Vxfer;
    double Bufsr;
    double Kbufsr;
    double GCaL;
    double epi_factor;
    double endo_factor;
    double mcell_factor;
    double GK1;
    double knaca;
    double KmNai;
    double KmCa;
    double ksat;
    double n;
    double knak;
    double KmK;
    double KmNa;
    double Vleak;
    double Bufss;
    double Kbufss;
    double Vc;
    double Vss;
    double Vsr;
    double inverseVcF2;
    double inverseVcF;
    double inversevssF2;
    double Bufc;
    double Kbufc;
    double GNa;
    double s;
    double SPM;
    double phi;


};


}

#endif