#ifndef OOMPH_EXPLICIT_TNNP_06_VENT_UPDATED_HEADER
#define OOMPH_EXPLICIT_TNNP_06_VENT_UPDATED_HEADER

// Config header generated by autoconfig
#ifdef HAVE_CONFIG_H
  #include <oomph-lib-config.h>
#endif

#include "cell_model_base_updated.h"

namespace oomph{

	class ExplicitTNNP06VentUpdated : public CellModelBaseUpdated
	{
	public:
		ExplicitTNNP06VentUpdated();

		double return_initial_state_variable(const unsigned &v, const unsigned &cell_type) override;

		double return_initial_membrane_potential(const unsigned &cell_type) override;

		void Calculate_Derivatives(const double &Vm,
													std::unordered_map<std::string, double> CellVariables,
													const double &t,
													const double &dt,
													const unsigned &cell_type,
													std::unordered_map<std::string, double> Other_Parameters,
													std::unordered_map<std::string, double> Other_Variables,
													std::unordered_map<std::string, double> &Variable_Derivatives,
													double &Iion) override;

		std::unordered_map<std::string, double> get_data_output() override;

		

	protected:
		
		double Tent_R;
		double Tent_F;
		double Tent_T;
		double Tent_Ko;
		double Tent_Cao;
		double Tent_Nao;
		double Tent_Vc;
		double Tent_Vsr;
		double Tent_Vss;
		double Tent_Bufc;
		double Tent_Kbufc;
		double Tent_Bufsr;
		double Tent_Kbufsr;
		double Tent_Bufss;
		double Tent_Kbufss;
		double Tent_Vmaxup;
		double Tent_Kup;
		double Tent_Vrel;
		double Tent_k1_;
		double Tent_k2_;
		double Tent_k3;
		double Tent_k4;
		double Tent_EC;
		double Tent_maxsr;
		double Tent_minsr;
		double Tent_Vleak;
		double Tent_Vxfer;
		double Tent_CAPACITANCE;
		double Tent_pKNa;
		double Tent_GbNa;
		double Tent_KmK;
		double Tent_KmNa;
		double Tent_knak;
		double Tent_GCaL;
		double Tent_GbCa;
		double Tent_knaca;
		double Tent_KmNai;
		double Tent_KmCa;
		double Tent_ksat;
		double Tent_n;
		double Tent_GpCa;
		double Tent_KpCa;
		double Tent_GpK;
		double Tent_RTONF;
		double Tent_inverseVcF2;
		double Tent_inverseVcF;
		double Tent_inversevssF2;

	};
}

#endif